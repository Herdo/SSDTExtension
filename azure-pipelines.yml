# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
 branches:
   include:
     - master

pr:
 branches:
   include:
     - master

variables:
  isPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]
  solution: '**/*.sln'
  buildPlatform: 'AnyCPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  strategy:
    matrix:
      # 2019:
      #   imageName: 'windows-2019'
      #   extensionVersion: '2019'
      #   vsVersion: '16.0'
      2022:
        imageName: 'windows-2022'
        extensionVersion: '2022'
        vsVersion: '17.0'
  pool:
    vmImage: $(imageName)
  steps:
  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud
    condition: eq(variables.isPullRequest, False)
    inputs:
      projectName: 'SSDT Lifecycle Extension'
      projectKey: 'SSDTLifecycleExtension'
      projectVersion: '$(Build.BuildNumber)'
      organization: 'herdo-github'
      SonarCloud: 'SonarCloud-CodeAnalysis-Server'
      extraProperties: |
       sonar.exclusions=src\TestDatabase\**\*

  - task: NuGetToolInstaller@0
    displayName: NuGet Tool Installer

  - task: NuGetCommand@2
    displayName: Restore NuGet packages
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    displayName: Build $(extensionVersion) version of extension
    inputs:
      solution: '**/*$(extensionVersion).csproj'
      vsVersion: '$(vsVersion)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSBuild@1
    displayName: Build sqlproj for tests
    inputs:
      solution: '**/*.sqlproj'
      vsVersion: '$(vsVersion)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    displayName: Run tests
    continueOnError: true
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      codeCoverageEnabled: true
      runSettingsFile: '$(Build.SourcesDirectory)\src\UnitTestsShared\test.runsettings'

  - task: SonarCloudAnalyze@1 
    displayName: Run SonarCloud Analyzer
    condition: eq(variables.isPullRequest, False)

  - task: CopyFiles@2
    displayName: Copy test results to artifacts
    condition: always()
    inputs:
      SourceFolder: 'D:\a\'
      Contents: '_temp/TestResults/**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: Publish build artifacts
    condition: always()
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

  # - task: CopyFiles@2
  #   name: CopyDeploymentData
  #   displayName: Copy deployment data to artifact staging directory
  #   inputs:
  #     SourceFolder: '$(Build.SourcesDirectory)'
  #     Contents: |
  #      deployment\*
  #      README.md
  #     TargetFolder: '$(Build.ArtifactStagingDirectory)'

  # - task: CopyFiles@2
  #   name: CopyVSIX
  #   displayName: Copy VSIX to artifact staging directory
  #   inputs:
  #     SourceFolder: '$(Build.SourcesDirectory)'
  #     Contents: |
  #      **\bin\Release\*.vsix
  #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
  #     flattenFolders: true

  # - task: PublishBuildArtifacts@1
  #   displayName: Publish VSIX build artifact
  #   inputs:
  #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  #     ArtifactName: VSIX